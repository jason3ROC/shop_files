# *************************
# ******* Intro ***********
# *************************

# cust_mail_true v0.0.0
# written by Jason Miller
# logs into Lightspeed API
# searches through customer list and sets mailing to true
# for MailChimp integration

# *************************
# ******* Import ***********
# *************************
import numpy as mp
import pandas as pd
import datetime
import csv
import glob
import os

# *************************
# ******* Log file initialize ***********
# *************************

# ********---->> set current folder <<--------*******
folder_name = r'C:\Users\jaymi\OneDrive\Documents\3ROC\logs'
os.chdir(folder_name)

# ********---->> set log <<--------*******
now = datetime.datetime.now()
beta = True #  True is testing, False is production and will label unique log file
if beta:
    logname = 'log.txt'
else:
    logname = 'log-' + now.strftime('%Y%m%d%H%M') + '.txt'
log = open(logname, mode='w')

# *************************
# ******* define functions ***********
# *************************
def log_msg (s):
    sm = now.strftime('%Y%m%d%H%M%S') + ': ' + s
    print(sm)
    log.write(sm + '\n')

log_msg('program started')


# *************************
# ******* connect to Lightspeed API ***********
# *************************
log_msg('connecting to Lightspeed...')

# custom modification of https://pypi.org/project/lightspeed-api/
# added some mods since multi tagging can only be done in HTML not JSON uploads
import lightspeed_requests

# get from OS file
c = {'account_id': '###',
     'client_id': '###',
     'client_secret': '###',
     'refresh_token': '###'
     }

ls = lightspeed_requests.Lightspeed(c)

log_msg('...connected to Lightspeed')


# *************************
# ******* main body start ***********
# *************************

# use the site below as key reference for API communication
#https://developers.lightspeedhq.com/retail/endpoints/Item/

# define variables needed for upload

# variables from GoFormz
d = description  
s = consignment sku
p = price
e = vendor email, name
g = g

# for vendor need to lookup master list to see if email address already linked to vendor profile
# if yes - use vendorID, if no, leave blank and new vendor created
v = vendor 

# create a 'list' of {'used','last_name', 'formID'}
# need to add tags after item creation (?)
t = tags


# static variable
prod_cate = category 

# need to add quantity after item creation (?)
q = qty


{
      "defaultCost": "0",
      "discountable": "true",
      "tax": "false",
      "itemType": "default",
      "description": d,
      "customSku": s,
      "categoryID": prod_cate,
      "taxClassID": "1",
      "itemMatrixID": "0",
      "defaultVendorID": v,
      "Prices": {
      "ItemPrice": [
        {
          "amount": p,
          "useTypeID": "1",
          "useType": "Default"
        },
        {
          "amount": "p,
          "useTypeID": "2",
          "useType": "MSRP"
        },
        {
          "amount": p,
          "useTypeID": "3",
          "useType": "Online"
        }
      ]}



OOLD

d = description 

{
      "defaultCost": "0",
      "discountable": "true",
      "tax": "false",
      "itemType": "default",
      "serialized": "false",
      "description": d,
      "modelYear": "0",
      "upc": "",
      "ean": "",
      "customSku": "12341234",
      "manufacturerSku": "",
      "publishToEcom": "true",
      "categoryID": "1",
      "taxClassID": "1",
      "departmentID": "0",
      "itemMatrixID": "0",
      "manufacturerID": "0",
      "seasonID": "0",
      "defaultVendorID": "0",
      "Prices": {
      "ItemPrice": [
        {
          "amount": "400",
          "useTypeID": "1",
          "useType": "Default"
        },
        {
          "amount": "275",
          "useTypeID": "2",
          "useType": "MSRP"
        },
        {
          "amount": "320",
          "useTypeID": "3",
          "useType": "Online"
        }



# *************************
# ******* main body ended ***********
# *************************



# *************************
# ******* program ended ***********
# *************************
log_msg('program ended')





